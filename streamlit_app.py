# -*- coding: utf-8 -*-
"""streamlit_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DwDbmxPKavr6d51UTRAgHRhN5cbsCYml
"""

import streamlit as st
import requests
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Function to send query to Flask backend
def query_backend(query):
    try:
        headers = {'Content-Type': 'application/json'}
        response = requests.post('http://127.0.0.1:5001/', json={'question': query}, headers=headers, timeout=60)
        if response.status_code == 200:
            return response.json().get('answer', 'No response from backend.')
        else:
            return f"Error querying backend: {response.status_code} {response.text}"
    except requests.exceptions.RequestException as e:
        st.error(f"Request failed: {e}")
        return "An error occurred while processing your request."

# Main function to run Streamlit app
def main():
    st.set_page_config(page_title="Welcome to Jessup Cellars")
    # Streamlit app
    st.title("Chatbot Interface")
    st.header("Let's chat about Wine! â˜º")

    # Initialize chat history
    if "chat_history" not in st.session_state:
        st.session_state["chat_history"] = []

    # User input
    query = st.text_input("Type your question:")

    if st.button("Send"):
        if query:
            # Send query to backend and retrieve response
            response = query_backend(query)
            # Update chat history if the response is not empty
            if response:
                st.session_state["chat_history"].append(("You", query))
                st.session_state["chat_history"].append(("Bot", response))
            else:
                st.session_state["chat_history"].append(("Bot", "For more details, click on the link: https://jessupcellars.com/ or contact (707) 944-5620"))
            # Clear the input field
            st.session_state["user_input"] = ""

    # Display chat history
    st.markdown("### Chat History")
    for speaker, message in st.session_state["chat_history"]:
        st.markdown(f"**{speaker}**: {message}")

if __name__ == '__main__':
    main()